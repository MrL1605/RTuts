1 + 2
print (1+9)
"Errrr"
print ("Errrr")
sum(1,2,3)
sqrt(35)
sqrt(35)
rep("Yo!", times = 3)
rep("Yo!", 3)
# Repeat values
install.packages("sqirl")
install.packages("swirl")
install.packages("swirl")
library("sqirl")
library("sqirl")
library("swirl")
x/2
x*2
x**2
x**2
# Sum of values
x^2
source('~/Linktogit_things/AllOtherProjects/OtherCodes/RTuts/Tuts1.R')
median(y=1:10)
median(y<-1:10)
help(median)
help("median")
median(x <- 1:10)
x<-3          # Assignment
rep("Yo!", times <- 3)
rep("Yo!", times = 3)
times <- None
times <- NULL
times <- NULL
rep("Yo!", times = 3)
rep("Yo!", times <- 3)
times
help("median")
library("swirl")
source("SwirlErrors.txt")
source("~/LinktoOtherCodes/RTuts/html_code.Rhtml")
install.packages("knit")
install.packages("knitr")
source("Tuts1.R")
source("~/LinktoOtherCodes/RTuts/Tuts1.R")
plot(cars)
summary(cars)
head(cars)
tail(cars
tail(cars)
tail(cars)
clear
clear()
clean()
reset()
x
list.files()
list
help(list)
examples("median")
example("median")
source('~/Linktogit_things/AllOtherProjects/OtherCodes/RTuts/Tuts1.R')
source('~/Linktogit_things/AllOtherProjects/OtherCodes/RTuts/Tuts1.R')
summary(cars)
head(cars)
tail(cars)
plot(cars)
c(1,,25,3)
c(1,NULL,25,3)
len(c(1,NULL,25,3))
length(c(1,NULL,25,3))
length(x)
x <- c(1,NULL,25,6)
length(x)
c('V','I', 'T')
c('V','I', 'T',"University")
class(v)
v <- TRUE
class(v)
class(v)
v <- 2.4
class(v)
class(v)
v <- 2
class(v)
v <- NULL
v <- 2
class(v)
v <- 2L
class(v)
v <- 2i+3
class(v)
times <- NULL
rep("Yo!", times = 3)
rep("Yo!", times <- 3)
v <- TRUE
class(v)
v <- 2.4
class(v)
# Integer
v <- NULL
v <- 2L
class(v)
c(1L, 2, 5)
y <- c(1L, 2, 5)
y <- c(1L, 2, 5)
class
class(y)
v <- charToRaw('Halo')
v <- charToRaw('Halo')
class(v)
v <- 2.4
v <- 2L
class(v)
v <- 2.4
class(v)
v <- charToRaw('Halo')
class(v)
y <- rep("Yo!", times <- 3)
class(y)
import math
1:10
9:5:-2
9:5
seq(1,10)
seq(9,1,-2)
seq(9,2,-2)
sent
sent <- c("walk","on","the","planet")
sent
sent[0]
sent[2]
sent
sent[2]
sent[2] <- "that"
sent
sent[2]
sent[3] <- "that"
sent
sent[4,7] <- c("place", "where", "no onw lives")
sent[4,7] <- c("place", "where", "no one", "lives")
sent[3,4] <- c("over", "that", "place")
sent[3:4] <- c("over", "that", "place")
sent[3:5] <- c("over", "that", "place")
sent <- c("walk","on","the","planet")
sent[0]
sent <- c("walk","on","the","planet")
sent[0]
# Not same as of Python
sent[2]
sent[3] <- "that"
sent
sent[3:5] <- c("over", "that", "place")
sent[3] <- "that"
sent
sent[2:4] <- c("over", "that", "place")
sent <- c("walk","on","the","planet")
sent[0]
# Not same as of Python
sent[2]
sent[3] <- "that"
sent
sent[2:4] <- c("over", "that", "place")
ranks <- 1:3
names(ranks) <- c("first", "second", "third")
ranks
ranks["first"]
vesselsSunk <- c(4, 5, 1)
barplot(vesselsSunk)
barplot(vesselsSunk)
names(vesselsSunk) <- c("England", "France", "Norway")
barplot(vesselsSunk)
a*2
a <- c(10, 25, 34)
a*2
a/2
a+2
a+2
a + 2
b <- c(4, 5, 6)
a-b
b <- c(5,6)
a-b
b <- c(5)
a-b
a == c(10,25,34)
y <- c(1L, "string", FALSE)
# ?guess
y
class(y)
y <- c(1L, 2, 5)
# ?guess
class(y)
x <- c(1, NULL, 25, 6)
y
a <- c(10, 25, 30)
a * 2
a / 2
a + 2
b <- c(4, 5, 10)
a-b
b <- c(5,10)
a-b
b <- c(5)
a-b
a == c(10,25,34)
plot(a,b)
b <- c(5,10)
plot(a,b)
b <- c(5,10, 25)
plot(a,b)
values <- -10:10
absolutes <- abs(values)
plot(values, absolutes)
sum(25,NULL, 25)
sum(25,NaN, 25)
sum(25,NULL, 25)
sum(25,NaN, 25)
barplot(vesselsSunk)
vesselsSunk <- c(4, 5, 1)
barplot(vesselsSunk)
names(vesselsSunk) <- c("England", "France", "Norway")
barplot(vesselsSunk)
# Operations
sum(25,NaN, 25, na.rm = TRUE)
matrix(0, 3, 4)
matrix(a, 3, 4)
a <- 1:12
a
matrix(a, 3, 4)
dim(a)
matrix(a, 1, 12)
b <- matrix(a, 1, 12)
b
dim(b)
dim(b) <- c(2,4)
dim(b) <- c(2,6)
b
# Make a matrix by changing dimensions
dim(a)
b <- matrix(a, 1, 12)
b
dim(b)
dim(b) <- c(2,6)
b
b[2,4]
b[2,4]
b[2,4] <- 2
b
b[2,]
b[,4]
b[, 2:4]
elevation <- matrix(1, 10, 10)
elevation[4, 6] <- 0
contour(elevation)
persp(elevation)
elevation[2,2] <- 0
persp(elevation)
elevation[2,2] <- 5
persp(elevation)
elevation[2,2] <- 2
persp(elevation)
elevation[2,2] <- 1.2
persp(elevation)
elevation[2,2] <- 1.6
persp(elevation)
elevation[2,2] <- 1.8
persp(elevation)
pers
persp(volcano)
persp(volcano)
image(volcano)
limbs <- c(4, 3, 4, 3, 2, 4, 4, 4)
names(limbs) <- c('One-Eye', 'Peg-Leg', 'Smitty', 'Hook', 'Scooter', 'Dan', 'Mikey', 'Blackbeard')
mean(limbs)
barplot(limbs)
abline(h = mean(limbs))
plot(a,b)
abline(h = mean(limbs))
limbs <- c(4, 3, 4, 3, 2, 4, 4, 14)
names(limbs) <- c('One-Eye', 'Peg-Leg', 'Smitty', 'Hook', 'Scooter', 'Dan', 'Mikey', 'Davy Jones')
mean(limbs)
barplot(limbs)
abline(h = mean(limbs))
barplot(limbs)
limbs <- c(4, 3, 4, 3, 2, 4, 4, 4)
names(limbs) <- c('One-Eye', 'Peg-Leg', 'Smitty', 'Hook', 'Scooter', 'Dan', 'Mikey', 'Blackbeard')
median(limbs)
barplot(limbs)
mean(limbs)
barplot(limbs)
abline(h = mean(limbs))
plot(a,b)
abline(h = mean(limbs))
median(limbs)
barplot(limbs)
abline(h = mean(limbs))
abline(h = median(limbs))
limbs <- c(4, 3, 4, 3, 2, 4, 4, 14)
names(limbs) <- c('One-Eye', 'Peg-Leg', 'Smitty', 'Hook',
'Scooter', 'Dan', 'Mikey', 'Davy Jones')
mean(limbs)
barplot(limbs)
abline(h = mean(limbs))
plot(a,b)
abline(h = mean(limbs))
median(limbs)
barplot(limbs)
abline(h = mean(limbs))
abline(h = median(limbs))
sd(limbs)
sd <- sqrt(1/n * (sum(X-mean(X))))
n <- length(limbs)
sd <- sqrt(1/n * (sum(limbs - mean(limbs))))
sd
limbs - mean(limbs)
mean(limbs)
limbs
limbs
mean(limbs)
limbs - mean(limbs)
sum(limbs - mean(limbs))
absolutes(limbs - mean(limbs))
abs(limbs - mean(limbs))
absolutes(limbs - mean(limbs))
abs(limbs - mean(limbs))
sum(abs(limbs - mean(limbs)))
sum(abs(limbs - mean(limbs)))/n
limbs
n <- length(limbs)
sqrt(sum(abs(limbs - mean(limbs)))/n)
sd(limbs)
abs(limbs - mean(limbs))
abs(limbs - mean(limbs)) ** 2
mean(limbs)
abs(limbs - mean(limbs))
abs(limbs - mean(limbs)) ** 2
sum(abs(limbs - mean(limbs)))
sum(abs(limbs - mean(limbs)))/n
sum(abs(limbs - mean(limbs))** 2)
abs(limbs - mean(limbs))
abs(limbs - mean(limbs)) ** 2
sum(abs(limbs - mean(limbs))** 2)
sum(abs(limbs - mean(limbs))** 2)/n
sqrt(sum(abs(limbs - mean(limbs))**2)/n)
sd(limbs)
(limbs - mean(limbs)) ** 2
sum((limbs - mean(limbs)) ** 2)
sum((limbs - mean(limbs)) ** 2) / n
sqrt(sum((limbs - mean(limbs)) ** 2) / n)
sd(limbs)
n <- length(limbs)
mean(limbs)
(limbs - mean(limbs)) ** 2
sum(limbs - mean(limbs)) ** 2)
sum(limbs - mean(limbs)) ** 2) / n
sqrt(sum(limbs - mean(limbs)) ** 2) / n)
limbs
n <- length(limbs)
mean(limbs)
(limbs - mean(limbs)) ** 2
mean <- mean(limbs)
(limbs - mean) ** 2
mean <- mean(limbs)
(limbs - mean)
(limbs - mean) ** 2
(limbs - mean) ** 2
sum((limbs - mean(limbs)) ** 2)
sum((limbs - mean(limbs)) ** 2) / n
sqrt((sum(limbs - mean(limbs)) ** 2) / n)
sd(limbs)
sqrt(sum((limbs - mean(limbs)) ** 2) / n)
sqrt(sum((limbs - mean) ** 2) / n)
sqrt(sum((limbs - mean) ** 2) / (n+1))
sd(limbs)
sqrt(sum((limbs - mean) ** 2) / (n-1))
sd(limbs)
limbs
n <- length(limbs)
mean <- mean(limbs)
limbs - mean
(limbs - mean) ** 2
limbs
n <- length(limbs)
mean <- mean(limbs)
limbs - mean
(limbs - mean) ** 2
sum((limbs - mean(limbs)) ** 2)
sum((limbs - mean(limbs)) ** 2) / (n-1)
sqrt(sum((limbs - mean(limbs)) ** 2) / (n-1))
sd(limbs)
help(abline)
treasure <- data.frame(weights, prices, types)
weights <- c(300, 200, 100, 250,150)
prices <- c(9000,5000,12000,7500,18000)
types <- c("gold", "silver", "gems", "gold", "gems")
treasure <- data.frame(weights, prices, types)
treasure
treasure[[1]]
treasure[[1,1]]
treasure[[2]]
treasure[[2,2]]
treasure[["weights"]]
list.files()
setwd("~/Linktogit_things/RTuts")
list.files()
read.csv("targets.csv")
read.csv("targets.csv", header=TRUE)
targets <- read.csv("targets.csv")
targets <- read.csv("targets.csv")
read.table("infantry.txt")
read.table("infantry.txt", sep = "\t")
read.table("infantry.txt", sep = "\t")
read.table("infantry.txt", sep = "\t")
read.table("infantry.txt", sep = "\t")
read.table("infantry.txt", sep = "\t")
read.table("infantry.txt", sep = "\t", header = TRUE)
read.table("infantry.txt", sep = "\t")
read.table("infantry.txt", sep = "\t")
read.table("infantry.txt", sep = "\t")
read.table("infantry.txt", sep = "\t", fill = FALSE)
read.table("infantry.txt", sep = "\t", fill = FALSE)
read.table("infantry.txt", sep = "\t", fill = FALSE)
read.table("infantry.txt", sep = "\t", fill = FALSE)
read.table("Port         Infantry
Porto Bello  700
Cartagena    500
Panama City  1500
Havana       2000", sep = "\t", fill = FALSE)
read.table(text = "Port         Infantry
Porto Bello  700
Cartagena    500
Panama City  1500
Havana       2000", sep = "\t", fill = FALSE)
read.table(text = "Port        Infantry
Porto Bello  700
Cartagena    500
Panama City  1500
Havana       2000", sep = "\t", fill = FALSE)
read.table(text = "Port Infantry
Porto Bello 700
Cartagena   500
Panama City 1500
Havana  2000", sep = "\t", fill = FALSE)
help(readlines)
help("readlines")
help("??readlines")
sapply
readLines("infantry.txt")
readLines("infantry.txt")
read.table("infantry.txt", sep = "\t")
read.table("infantry.txt", sep = "\t")
readLines()
readLines("infantry.txt")
readLines("infantry.txt")
list.files()
read.csv("targets.csv")
readLines("infantry.txt")
read.table("infantry.txt", sep = "\t")
read.table("infantry.txt", sep = "\t", header = TRUE)
targets <- read.csv("targets.csv")
infantry <- read.table("infantry.txt", sep="\t", header=TRUE)
merge(x = targets, y = infantry)
read.csv("targets.csv", sep = ",")
read.csv("targets.csv")
read.table("infantry.txt")
gdp <- read.csv("gdp.csv", sep = ",", header = TRUE)
gdp
gdp.head()
head(gdp)
tail(gdp)
summary(gdp)
head(mortality)
mortality <-
read.csv("infant_mortality.csv", sep = ",", header = TRUE)
head(mortality)
tail(mortality)
summary(mortality)
countries <- merge(x = gdp, y = mortality)
plot(countries$gdp, countries$mortality)
plot(countries$mortality, countries$gdp)
countries <- merge(x = gdp, y = mortality)
plot(countries$mortality, countries$gdp)
countries <- merge(x = gdp, y = mortality)
plot(countries$gdp, countries$mortality)
cor.test(countries$gdp, countries.mortality)
cor.test(countries$gdp, countries$mortality)
cor.test(countries$mortality, countries$gdp)
summary(gdp)
summary(mortality)
summary(countries)
plot(countries$gdp, countries$mortality)
names(countries) <- c("Index", "gdp", "mortality")
plot(countries$gdp, countries$mortality)
cor.test(countries$gdp, countries$mortality)
summary(countries)
names(countries) <- c("country", "gdp", "mortality")
plot(countries$gdp, countries$mortality)
help(cor.test)
cor.test(countries$gdp, countries$mortality, method = "spearm")
cor.test(countries$gdp, countries$mortality, method = "kendall")
line <- lm(countries$mortality ~ countries$gdp)
# Response var ~ Predictor var
# tilde character '~'
line
abline(line)
install.packages("ggplot2")
install.packages("ggplot2")
help(package = "ggplot2")
help(package = "ggplot2")
View(treasure)
install.packages("ggplot2")
